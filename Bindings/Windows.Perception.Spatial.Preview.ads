--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2018 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with Windows; use Windows;
with Windows.Foundation.Numerics;
package Windows.Perception.Spatial.Preview is

   pragma preelaborate;
   
   ------------------------------------------------------------------------
   -- Forward Declaration - Interfaces
   ------------------------------------------------------------------------
   
   type ISpatialGraphInteropPreviewStatics_Interface;
   type ISpatialGraphInteropPreviewStatics is access all ISpatialGraphInteropPreviewStatics_Interface'Class;
   type ISpatialGraphInteropPreviewStatics_Ptr is access all ISpatialGraphInteropPreviewStatics;
   
   ------------------------------------------------------------------------
   -- Interfaces
   ------------------------------------------------------------------------
   
   ------------------------------------------------------------------------
   
   IID_ISpatialGraphInteropPreviewStatics : aliased constant Windows.IID := (3225576524, 8408, 20176, (174, 247, 104, 5, 184, 229, 63, 85 ));
   
   type ISpatialGraphInteropPreviewStatics_Interface is interface and Windows.IInspectable_Interface;
   
   function CreateCoordinateSystemForNode
   (
      This       : access ISpatialGraphInteropPreviewStatics_Interface
      ; nodeId : Windows.Guid
      ; RetVal : access Windows.Perception.Spatial.ISpatialCoordinateSystem
   )
   return Windows.HRESULT is abstract;
   
   function CreateCoordinateSystemForNodeWithPosition
   (
      This       : access ISpatialGraphInteropPreviewStatics_Interface
      ; nodeId : Windows.Guid
      ; relativePosition : Windows.Foundation.Numerics.Vector3
      ; RetVal : access Windows.Perception.Spatial.ISpatialCoordinateSystem
   )
   return Windows.HRESULT is abstract;
   
   function CreateCoordinateSystemForNodeWithPositionAndOrientation
   (
      This       : access ISpatialGraphInteropPreviewStatics_Interface
      ; nodeId : Windows.Guid
      ; relativePosition : Windows.Foundation.Numerics.Vector3
      ; relativeOrientation : Windows.Foundation.Numerics.Quaternion
      ; RetVal : access Windows.Perception.Spatial.ISpatialCoordinateSystem
   )
   return Windows.HRESULT is abstract;
   
   function CreateLocatorForNode
   (
      This       : access ISpatialGraphInteropPreviewStatics_Interface
      ; nodeId : Windows.Guid
      ; RetVal : access Windows.Perception.Spatial.ISpatialLocator
   )
   return Windows.HRESULT is abstract;
   
   ------------------------------------------------------------------------
   -- Classes
   ------------------------------------------------------------------------
   
   
   ------------------------------------------------------------------------
   -- Static Procedures/functions
   ------------------------------------------------------------------------
   
   function CreateCoordinateSystemForNode
   (
      nodeId : Windows.Guid
   )
   return Windows.Perception.Spatial.ISpatialCoordinateSystem;
   
   function CreateCoordinateSystemForNodeWithPosition
   (
      nodeId : Windows.Guid
      ; relativePosition : Windows.Foundation.Numerics.Vector3
   )
   return Windows.Perception.Spatial.ISpatialCoordinateSystem;
   
   function CreateCoordinateSystemForNodeWithPositionAndOrientation
   (
      nodeId : Windows.Guid
      ; relativePosition : Windows.Foundation.Numerics.Vector3
      ; relativeOrientation : Windows.Foundation.Numerics.Quaternion
   )
   return Windows.Perception.Spatial.ISpatialCoordinateSystem;
   
   function CreateLocatorForNode
   (
      nodeId : Windows.Guid
   )
   return Windows.Perception.Spatial.ISpatialLocator;
   
end;
