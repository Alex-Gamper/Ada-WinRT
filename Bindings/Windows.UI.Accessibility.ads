--------------------------------------------------------------------------------
-- <auto-generated>                                                           --
--     This code was generated by a tool.                                     --
--                                                                            --
--     Changes to this file may cause incorrect behavior and will be lost if  --
--     the code is regenerated.                                               --
-- </auto-generated>                                                          --
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--                                                                            --
--    Copyright(c) 2018 Alexander Gamper, All Rights Reserved.                --
--                                                                            --
--    Ada-WinRT                                                               --
--                                                                            --
-- This program is free software: you can redistribute it and / or modify     --
-- it under the terms of the GNU Lesser General Public License as published by--
-- the Free Software Foundation, either version 3 of the License, or          --
-- (at your option) any later version.                                        --
--                                                                            --
-- This program is distributed in the hope that it will be useful,            --
-- but WITHOUT ANY WARRANTY; without even the implied warranty of             --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the               --
-- GNU Lesser General Public License for more details.                        --
--                                                                            --
-- You should have received a copy of the GNU Lesser General Public License   --
-- along with this program.If not, see http://www.gnu.org/licenses            --
--                                                                            --
--------------------------------------------------------------------------------
with Windows.Foundation;
package Windows.UI.Accessibility is

   pragma preelaborate;
   
   ------------------------------------------------------------------------
   -- Forward Declaration - Delegates/Events
   ------------------------------------------------------------------------
   
   type TypedEventHandler_IScreenReaderService_add_ScreenReaderPositionChanged_Interface;
   type TypedEventHandler_IScreenReaderService_add_ScreenReaderPositionChanged is access all TypedEventHandler_IScreenReaderService_add_ScreenReaderPositionChanged_Interface'Class;
   type TypedEventHandler_IScreenReaderService_add_ScreenReaderPositionChanged_Ptr is access all TypedEventHandler_IScreenReaderService_add_ScreenReaderPositionChanged;
   
   ------------------------------------------------------------------------
   -- Forward Declaration - Interfaces
   ------------------------------------------------------------------------
   
   type IScreenReaderPositionChangedEventArgs_Interface;
   type IScreenReaderPositionChangedEventArgs is access all IScreenReaderPositionChangedEventArgs_Interface'Class;
   type IScreenReaderPositionChangedEventArgs_Ptr is access all IScreenReaderPositionChangedEventArgs;
   type IScreenReaderService_Interface;
   type IScreenReaderService is access all IScreenReaderService_Interface'Class;
   type IScreenReaderService_Ptr is access all IScreenReaderService;
   
   ------------------------------------------------------------------------
   -- Interfaces
   ------------------------------------------------------------------------
   
   ------------------------------------------------------------------------
   
   IID_IScreenReaderPositionChangedEventArgs : aliased constant Windows.IID := (1434367461, 21712, 23757, (159, 197, 237, 51, 53, 127, 138, 159 ));
   
   type IScreenReaderPositionChangedEventArgs_Interface is interface and Windows.IInspectable_Interface;
   
   function get_ScreenPositionInRawPixels
   (
      This       : access IScreenReaderPositionChangedEventArgs_Interface
      ; RetVal : access Windows.Foundation.Rect
   )
   return Windows.HRESULT is abstract;
   
   function get_IsReadingText
   (
      This       : access IScreenReaderPositionChangedEventArgs_Interface
      ; RetVal : access Windows.Boolean
   )
   return Windows.HRESULT is abstract;
   
   ------------------------------------------------------------------------
   
   IID_IScreenReaderService : aliased constant Windows.IID := (424104999, 60096, 20691, (189, 217, 155, 72, 122, 34, 98, 86 ));
   
   type IScreenReaderService_Interface is interface and Windows.IInspectable_Interface;
   
   function get_CurrentScreenReaderPosition
   (
      This       : access IScreenReaderService_Interface
      ; RetVal : access Windows.UI.Accessibility.IScreenReaderPositionChangedEventArgs
   )
   return Windows.HRESULT is abstract;
   
   function add_ScreenReaderPositionChanged
   (
      This       : access IScreenReaderService_Interface
      ; handler : TypedEventHandler_IScreenReaderService_add_ScreenReaderPositionChanged
      ; RetVal : access Windows.Foundation.EventRegistrationToken
   )
   return Windows.HRESULT is abstract;
   
   function remove_ScreenReaderPositionChanged
   (
      This       : access IScreenReaderService_Interface
      ; token : Windows.Foundation.EventRegistrationToken
   )
   return Windows.HRESULT is abstract;
   
   ------------------------------------------------------------------------
   -- Delegates/Events
   ------------------------------------------------------------------------
   
   ------------------------------------------------------------------------
   
   IID_TypedEventHandler_IScreenReaderService_add_ScreenReaderPositionChanged : aliased constant Windows.IID := (1370496834, 61180, 22226, (129, 133, 35, 222, 143, 8, 14, 10 ));
   
   type TypedEventHandler_IScreenReaderService_add_ScreenReaderPositionChanged_Interface(Callback : access procedure (sender : Windows.UI.Accessibility.IScreenReaderService ; args : Windows.UI.Accessibility.IScreenReaderPositionChangedEventArgs)) is new Windows.IMulticastDelegate_Interface(IID_TypedEventHandler_IScreenReaderService_add_ScreenReaderPositionChanged'access) with null record;
   function Invoke
   (
      This       : access TypedEventHandler_IScreenReaderService_add_ScreenReaderPositionChanged_Interface
      ; sender : Windows.UI.Accessibility.IScreenReaderService
      ; args : Windows.UI.Accessibility.IScreenReaderPositionChangedEventArgs
   )
   return Windows.HRESULT;
   
   ------------------------------------------------------------------------
   -- Classes
   ------------------------------------------------------------------------
   
   subtype ScreenReaderPositionChangedEventArgs is Windows.UI.Accessibility.IScreenReaderPositionChangedEventArgs;
   subtype ScreenReaderService is Windows.UI.Accessibility.IScreenReaderService;
   function Create return Windows.UI.Accessibility.IScreenReaderService;
   
   
   ------------------------------------------------------------------------
   -- Static Procedures/functions
   ------------------------------------------------------------------------
   
end;
